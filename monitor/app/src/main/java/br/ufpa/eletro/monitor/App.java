/*
 * This source file was generated by the Gradle 'init' task
 */
package br.ufpa.eletro.monitor;

import java.awt.Dimension;
import java.util.Arrays;
import java.util.Scanner;

import javax.swing.JFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.DefaultCategoryDataset;

import com.fazecast.jSerialComm.SerialPort;

public class App {
    private String title = "Monitor dos sensores";
    private JFrame frame;
    private SerialPort serialPort;
    private DefaultCategoryDataset defaultCategoryDataset = new DefaultCategoryDataset();
    private DynamicChart dynamicChart;

    public App(SerialPort sp){
        serialPort = sp;
        frame = new JFrame(title);
        frame.setSize(800,800);
        frame.setResizable(false);
        frame.setMinimumSize(new Dimension(800,800));
        frame.setMaximumSize(new Dimension(800,800));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        // Creates visible container to show the chart
        dynamicChart = DynamicChart.createDefaultDynamicChart(defaultCategoryDataset);

        ChartPanel chartPanel = new ChartPanel(dynamicChart.getChart());
        frame.add(chartPanel);
    }

    public void start(){
        Thread datasetUpdater = new Thread(new Runnable(){
            public void run(){
                try(Scanner arduinoScanner = new Scanner(serialPort.getInputStream())){;
                    System.out.println("On run method");
                    while(arduinoScanner.hasNext()){
                        String current = arduinoScanner.next().strip();
                        SData sData = SData.fromString(current);
                        for(int i = 0; i < sData.getSize(); i++){
                            defaultCategoryDataset.setValue(sData.getData()[i], "sensor " + i, "value");
                        }
                    }
                }
            }
        });
        CategoryPlot categoryPlot = dynamicChart.getChart().getCategoryPlot();
        categoryPlot.getRangeAxis().setRange(-100, 1200);

        datasetUpdater.start();
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        //System.out.println("choice one of the ports bellow:");
        //SerialPort[] ports = SerialPort.getCommPort("/dev/ttyUSB0");
        //int index = 0;
        //for(SerialPort sp : ports){
        //    System.out.printf("%d --> %s | %d\n",index, sp.getDescriptivePortName(), sp.getBaudRate());
        //    index ++;
        //}
        //System.out.flush();
        //try(Scanner scanner = new Scanner(System.in)){
        //    int option = Integer.parseInt(scanner.nextLine());
        SerialPort serialPort = SerialPort.getCommPort("/dev/ttyUSB0");
        serialPort.setComPortParameters(9600, 8, SerialPort.ONE_STOP_BIT, SerialPort.NO_PARITY);
        serialPort.setComPortTimeouts(SerialPort.TIMEOUT_SCANNER, 0, 0);
        if(!serialPort.openPort()){
            System.out.println("closed port. Exiting");
            return;
        }
        System.out.println("Creating app");
        App app = new App(serialPort);

        app.start();

    }
}
